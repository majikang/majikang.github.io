<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MJK&#39;s blog</title>
  <subtitle>Code and Record</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.majikang.com/"/>
  <updated>2017-01-14T15:55:19.097Z</updated>
  <id>http://www.majikang.com/</id>
  
  <author>
    <name>majikang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://www.majikang.com/2017/01/13/suse11%E9%85%8D%E7%BD%AElaravel%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.majikang.com/2017/01/13/suse11配置laravel开发环境/</id>
    <published>2017-01-13T15:16:48.195Z</published>
    <updated>2017-01-14T15:55:19.097Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Suse11安装配置php开发环境（交行家易通系统部署文档）"><a href="#Suse11安装配置php开发环境（交行家易通系统部署文档）" class="headerlink" title="Suse11安装配置php开发环境（交行家易通系统部署文档）"></a>Suse11安装配置php开发环境（交行家易通系统部署文档）</h3><h4 id="需要安装的软件"><a href="#需要安装的软件" class="headerlink" title="需要安装的软件"></a>需要安装的软件</h4><ul>
<li>Ubuntu 16.04</li>
<li>Git 2.10.0</li>
<li>PHP 7.0.12</li>
<li>HHVM</li>
<li>Xdebug</li>
<li>Nginx 1.10.1</li>
<li>MySQL</li>
<li>MariaDB 10.1.9</li>
<li>SQLite 3</li>
<li>Postgres</li>
<li>Composer</li>
<li>Node（With PM2, Bower, Grunt, and Gulp）</li>
<li>Redis 2.8.17</li>
<li>Memcached 1.4.5</li>
<li>Beanstalkd</li>
</ul>
<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><ul>
<li>netstat -ano|grep 80</li>
</ul>
<h4 id="乱码解决"><a href="#乱码解决" class="headerlink" title="乱码解决"></a>乱码解决</h4><ol>
<li>“计算机”–&gt;YaST2控制中心（注：非管理员用户（root）进入时要求提供root账号密码）–&gt;“系统”–&gt;“/etc/sysconfig编辑器”–&gt;“System”–&gt;“Environment”–&gt;“Language”，修改“RC_LANG”的值为“zh_CN.GB2312”，默认值为“zh_CN.UTF-8”。 修改完成后重新启动系统即可。</li>
<li>更改字符集会出现主菜单意外退出的错误，解决方案较麻烦，最好不要修改。</li>
</ol>
<p>(注：新建一个用户ehmuser，下载的软件统一放/home/ehmuser/soft，编译的软件放/home/ehmuser/lib，代码放/home/ehmuser/www)</p>
<h4 id="安装PCRE库"><a href="#安装PCRE库" class="headerlink" title="安装PCRE库"></a>安装PCRE库</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/home/</span>ehmuser<span class="regexp">/fota/</span>soft</div><div class="line">wget <span class="string">ftp:</span><span class="comment">//ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.39.tar.gz</span></div><div class="line">tar -zxvf pcre<span class="number">-8.39</span>.tar.gz</div><div class="line">cd pcre<span class="number">-8.39</span></div><div class="line">chmod +x configure</div><div class="line">.<span class="regexp">/configure --prefix=/</span>home<span class="regexp">/ehmuser/</span>fota<span class="regexp">/lib/</span>pcre</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<h4 id="安装zlib库"><a href="#安装zlib库" class="headerlink" title="安装zlib库"></a>安装zlib库</h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/home/</span>ehmuser<span class="regexp">/fota/</span>soft</div><div class="line">wget <span class="string">http:</span><span class="comment">//zlib.net/zlib-1.2.10.tar.gz</span></div><div class="line">tar -zxvf zlib<span class="number">-1.2</span><span class="number">.10</span>.tar.gz</div><div class="line">cd zlib<span class="number">-1.2</span><span class="number">.10</span></div><div class="line">chmod +x configure</div><div class="line">.<span class="regexp">/configure --prefix=/</span>home<span class="regexp">/ehmuser/</span>fota<span class="regexp">/lib/</span>zlib</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
<h4 id="下载openssl"><a href="#下载openssl" class="headerlink" title="下载openssl"></a>下载openssl</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd <span class="regexp">/home/</span>ehmuser<span class="regexp">/fota/</span>soft</div><div class="line">wget https:<span class="regexp">//</span>www.openssl.org<span class="regexp">/source/</span>openssl-<span class="number">1.1</span>.<span class="number">0</span>c.tar.gz</div><div class="line">tar -zxvf openssl-<span class="number">1.1</span>.<span class="number">0</span>c.tar.gz</div></pre></td></tr></table></figure>
<h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">cd /home/ehmuser/fota/soft</div><div class="line">wget http://nginx.org/download/nginx-1.10.2.tar.gz</div><div class="line">tar -zxvf nginx-1.10.2.tar.gz</div><div class="line">cd nginx-1.10.2</div><div class="line">chmod +x configure</div><div class="line">./configure --prefix=/home/ehmuser/fota/lib/nginx \</div><div class="line">-<span class="ruby">-sbin-path=<span class="regexp">/home/ehmuser</span><span class="regexp">/fota/lib</span><span class="regexp">/nginx/sbin</span><span class="regexp">/nginx \</span></span></div><div class="line">-<span class="ruby"><span class="regexp">-conf-path=/home</span><span class="regexp">/ehmuser/fota</span><span class="regexp">/lib/nginx</span><span class="regexp">/conf/nginx</span>.conf \</span></div><div class="line">-<span class="ruby">-pid-path=<span class="regexp">/home/ehmuser</span><span class="regexp">/fota/lib</span><span class="regexp">/nginx/nginx</span>.pid \</span></div><div class="line">-<span class="ruby">-error-log-path=<span class="regexp">/home/ehmuser</span><span class="regexp">/fota/lib</span><span class="regexp">/nginx/logs</span><span class="regexp">/error.log \</span></span></div><div class="line">-<span class="ruby"><span class="regexp">-http-log-path=/home</span><span class="regexp">/ehmuser/fota</span><span class="regexp">/lib/nginx</span><span class="regexp">/logs/access</span>.log \</span></div><div class="line">-<span class="ruby">-with-http_ssl_module \</span></div><div class="line">-<span class="ruby">-with-pcre=<span class="regexp">/home/ehmuser</span><span class="regexp">/fota/soft</span><span class="regexp">/pcre-8.39 \</span></span></div><div class="line">-<span class="ruby"><span class="regexp">-with-zlib=/home</span><span class="regexp">/ehmuser/fota</span><span class="regexp">/soft/zlib</span>-<span class="number">1.2</span>.<span class="number">10</span> \</span></div><div class="line">-<span class="ruby">-with-openssl=<span class="regexp">/home/ehmuser</span><span class="regexp">/fota/soft</span><span class="regexp">/openssl-1.1.0c</span></span></div><div class="line">make</div><div class="line">make install</div><div class="line"></div><div class="line">#这里pcre-8.39、zlib-1.2.10是源码下载路径</div></pre></td></tr></table></figure>
<h4 id="添加vhost文件夹"><a href="#添加vhost文件夹" class="headerlink" title="添加vhost文件夹"></a>添加vhost文件夹</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">cd /home/ehmuser/fota/<span class="class"><span class="keyword">lib</span>/<span class="title">nginx</span>/<span class="title">conf</span></span></div><div class="line">mkdir vhost</div><div class="line">vi nginx.conf</div><div class="line">在最后添加 <span class="keyword">include</span> vhost/*.conf;</div><div class="line">注释server&#123; listen  <span class="number">80</span> ......&#125;;内容</div><div class="line">cd /home/ehmuser/fota/<span class="class"><span class="keyword">lib</span>/<span class="title">nginx</span>/<span class="title">conf</span></span></div><div class="line">vi enable-php/conf</div><div class="line">填入以下代码</div><div class="line">        location ~ [^<span class="regexp">/]\.php(/</span>|$)</div><div class="line">        &#123;</div><div class="line">            try_files $uri =<span class="number">404</span>;</div><div class="line">            fastcgi_pass  <span class="symbol">unix:</span>/home/ehmuser/fota/php/var/run/php-cgi.sock;</div><div class="line">            fastcgi_index index.php;</div><div class="line">            <span class="keyword">include</span> fastcgi.conf;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h4 id="新增nginx8000端口"><a href="#新增nginx8000端口" class="headerlink" title="新增nginx8000端口"></a>新增nginx8000端口</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home/ehmuser/fota/<span class="class"><span class="keyword">lib</span>/<span class="title">nginx</span>/<span class="title">conf</span></span></div><div class="line">vi <span class="number">8000</span>.conf</div></pre></td></tr></table></figure>
<h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/home/ehmuser/fota/<span class="class"><span class="keyword">lib</span>/<span class="title">nginx</span>/<span class="title">nginx</span></span></div></pre></td></tr></table></figure>
<h4 id="nginx检查配置文件命令"><a href="#nginx检查配置文件命令" class="headerlink" title="nginx检查配置文件命令"></a>nginx检查配置文件命令</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo /home/ehmuser/fota/<span class="class"><span class="keyword">lib</span>/<span class="title">nginx</span>/<span class="title">sbin</span>/<span class="title">nginx</span> -<span class="title">t</span> -<span class="title">c</span> /<span class="title">home</span>/<span class="title">ehmuser</span>/<span class="title">fota</span>/<span class="title">lib</span>/<span class="title">nginx</span>/<span class="title">conf</span>/<span class="title">nginx</span>.<span class="title">conf</span></span></div></pre></td></tr></table></figure>
<h4 id="nginx-性能优化配置"><a href="#nginx-性能优化配置" class="headerlink" title="nginx 性能优化配置"></a>nginx 性能优化配置</h4><ol>
<li><p><strong>worker_processes</strong> 定义了nginx对外提供web服务时的worker进程数。最优值取决于许多因素，包括（但不限于）CPU核的数量、存储数据的硬盘数量及负载模式。不能确定的时候，将其设置为可用的CPU内核数将是一个好的开始（设置为“auto”将尝试自动检测它）。</p>
</li>
<li><p><strong>worker_rlimit_nofile</strong> 更改worker进程的最大打开文件数限制。如果没设置的话，这个值为操作系统的限制。设置后你的操作系统和Nginx可以处理比“ulimit -a”更多的文件，所以把这个值设高，这样nginx就不会有“too many open files”问题</p>
</li>
<li><p><strong>Events</strong>模块</p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">events</span>模块中包含nginx中所有处理连接的设置。</div></pre></td></tr></table></figure>
</li>
</ol>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="section">events</span> &#123; </div><div class="line">    <span class="attribute">worker_connections</span> <span class="number">2048</span>; </div><div class="line">    <span class="attribute">multi_accept</span> <span class="literal">on</span>; </div><div class="line">    <span class="attribute">use</span> <span class="literal">epoll</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>worker_connections</strong>：设置可由一个worker进程同时打开的最大连接数。如果设置了上面提到的worker_rlimit_nofile，可以将这个值设得很高。最大客户数也受系统的可用socket连接数限制（~ 64K）。<br><strong>multi_accept</strong>：告诉nginx收到一个新连接通知后接受尽可能多的连接。<br><strong>use</strong>：设置用于复用客户端线程的轮询方法。如果你使用Linux 2.6+，你应该使用epoll。如果你使用*BSD，你应该使用kqueue。</p>
<ol>
<li><strong>HTTP</strong>模块</li>
</ol>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="section">http</span> &#123; </div><div class="line">  <span class="attribute">server_tokens</span> <span class="literal">off</span>; </div><div class="line">  <span class="attribute">sendfile</span> <span class="literal">on</span>; </div><div class="line">  <span class="attribute">tcp_nopush</span> <span class="literal">on</span>; </div><div class="line">  <span class="attribute">tcp_nodelay</span> <span class="literal">on</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>server_tokens</strong>：并不会让nginx执行的速度更快，但它可以关闭在错误页面中的nginx版本数字，提高安全性。<br><strong>sendfile</strong>：可以让sendfile()发挥作用。sendfile()可以在磁盘和TCP socket之间互相拷贝数据(或任意两个文件描述符)。Pre-sendfile是传送数据之前在用户空间申请数据缓冲区。之后用read()将数据从文件拷贝到这个缓冲区，write()将缓冲区数据写入网络。sendfile()是立即将数据从磁盘读到OS缓存。因为这种拷贝是在内核完成的，sendfile()要比组合read()和write()以及打开关闭丢弃缓冲更加有效(更多有关于sendfile)。<br><strong>tcp_nopush</strong>：告诉nginx在一个数据包里发送所有头文件，而不一个接一个的发送。<br><strong>tcp_nodelay</strong>：告诉nginx不要缓存数据，而是一段一段的发送–当需要及时发送数据时，就应该给应用设置这个属性，这样发送一小块数据信息时就不能立即得到返回值。<br><strong>access_log</strong>：设置nginx是否将存储访问日志。关闭这个选项可以让读取磁盘IO操作更快(aka,YOLO)<br><strong>error_log</strong>：告诉nginx只能记录严重的错误：<br><strong>keepalive_timeout</strong>：给客户端分配keep-alive链接超时时间。服务器将在这个超时时间过后关闭链接。我们将它设置低些可以让ngnix持续工作的时间更长。<br><strong>client_header_timeout</strong> 和<strong>client_body_timeout</strong> 设置请求头和请求体(各自)的超时时间。我们也可以把这个设置低些。<br><strong>reset_timeout_connection</strong>：告诉nginx关闭不响应的客户端连接。这将会释放那个客户端所占有的内存空间。<br><strong>send_timeout</strong>：指定客户端的响应超时时间。这个设置不会用于整个转发器，而是在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，nginx就会关闭连接。<br><strong>limit_conn_zone</strong>：设置用于保存各种key（比如当前连接数）的共享内存的参数。5m就是5兆字节，这个值应该被设置的足够大以存储（32K<em>5）32byte状态或者（16K</em>5）64byte状态。<br><strong>limit_conn</strong>：为给定的key设置最大连接数。这里key是addr，我们设置的值是100，也就是说我们允许每一个IP地址最多同时打开有100个连接。<br><strong>default_type</strong>：设置文件使用的默认的MIME-type。<br><strong>charset</strong>：设置头文件中默认的字符集<br><strong>gzip</strong>：告诉nginx采用gzip压缩的形式发送数据。这将会减少发送的数据量。<br><strong>gzip_disable</strong>：为指定的客户端禁用gzip功能。我们设置成IE6或者更低版本以使我们的方案能够广泛兼容。<br><strong>gzip_static</strong>：告诉nginx在压缩资源之前，先查找是否有预先gzip处理过的资源。这要求你预先压缩你的文件（在这个例子中被注释掉了），从而允许你使用最高压缩比，这样nginx就不用再压缩这些文件了（想要更详尽的gzip_static的信息，请点击这里）。<br><strong>gzip_proxied</strong>：允许或者禁止压缩基于请求和响应的响应流。我们设置为any，意味着将会压缩所有的请求。<br><strong>gzip_min_length</strong>：设置对数据启用压缩的最少字节数。如果一个请求小于1000字节，我们最好不要压缩它，因为压缩这些小的数据会降低处理此请求的所有进程的速度。<br><strong>gzip_comp_level</strong>：设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的。我们设置为4，这是一个比较折中的设置。<br><strong>gzip_type</strong>：设置需要压缩的数据格式。上面例子中已经有一些了，你也可以再添加更多的格式。<br><strong>open_file_cache</strong>：打开缓存的同时也指定了缓存最大数目，以及缓存的时间。我们可以设置一个相对高的最大时间，这样我们可以在它们不活动超过20秒后清除掉。<br><strong>open_file_cache_valid</strong>：在open_file_cache中指定检测正确信息的间隔时间。<br><strong>open_file_cache_min_uses</strong>：定义了open_file_cache中指令参数不活动时间期间里最小的文件数。<br><strong>open_file_cache_errors</strong>：指定了当搜索一个文件时是否缓存错误信息，也包括再次给配置中添加文件。我们也包括了服务器模块，这些是在不同文件中定义的。如果你的服务器模块不在这些位置，你就得修改这一行来指定正确的位置。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Suse11安装配置php开发环境（交行家易通系统部署文档）&quot;&gt;&lt;a href=&quot;#Suse11安装配置php开发环境（交行家易通系统部署文档）&quot; class=&quot;headerlink&quot; title=&quot;Suse11安装配置php开发环境（交行家易通系统部署文档）&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.majikang.com/2017/01/10/hello-world/"/>
    <id>http://www.majikang.com/2017/01/10/hello-world/</id>
    <published>2017-01-10T15:44:40.708Z</published>
    <updated>2017-01-10T15:44:40.708Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
